version: '3'
services:
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    restart: always
    container_name: kafka
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - default
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  mongo:
    image: mongo
    restart: always
    container_name: mongo
    networks:
      - default
    ports:
      - "27018:27017"
    volumes:
      - ./data:/data/db

  nodejs-app:
    build:
      dockerfile: Dockerfile
      context: .
    container_name: nodejs-app
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "1111:1111"
    links:
      - kafka
      - mongo
    volumes:
      - ./src:/app/src
      - .env:/app/.env



networks:
  my-network:
    driver: bridge